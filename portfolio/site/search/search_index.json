{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"My Portfolio A show case of all Yi-Chun Chang's work For UW committee, please check the first 3~5 projects, Thank you! Introduction This is the a mkdocs website to demo projects You can find all of the projects listed below in a importance-order Check more about me in my home page Index FROZEN - Freeze your impulse to buy NSFW Detection - Not Safe For Work content detection API The Tank Series - The Ultimate Tank Gen2 - Arduino-based Gen1 - FPGA-based Modeling user willingness of data contribution in online social networks - Help to collect your data from social network faster Gender Differences on StackOverflow - So... What's the population sketch of the world's largest SEs' community? The Haunted Village - Escape from the ghosts with you besties on PC! deepeye_pack - An automatic data visualization system Back to Home Page","title":"Home"},{"location":"#my-portfolio","text":"","title":"My Portfolio"},{"location":"#a-show-case-of-all-yi-chun-changs-work","text":"","title":"A show case of all Yi-Chun Chang's work"},{"location":"#for-uw-committee-please-check-the-first-35-projects-thank-you","text":"","title":"For UW committee, please check the first 3~5 projects, Thank you!"},{"location":"#introduction","text":"This is the a mkdocs website to demo projects You can find all of the projects listed below in a importance-order Check more about me in my home page","title":"Introduction"},{"location":"#index","text":"FROZEN - Freeze your impulse to buy NSFW Detection - Not Safe For Work content detection API The Tank Series - The Ultimate Tank Gen2 - Arduino-based Gen1 - FPGA-based Modeling user willingness of data contribution in online social networks - Help to collect your data from social network faster Gender Differences on StackOverflow - So... What's the population sketch of the world's largest SEs' community? The Haunted Village - Escape from the ghosts with you besties on PC! deepeye_pack - An automatic data visualization system Back to Home Page","title":"Index"},{"location":"deepeye_pack/deepeye_pack/","text":"deepeye_pack A Lego Tank!! Introduction This is a Python package for DeepEye API,can easily visualize data without too much effort. And provide with really simple usage the DeepEye system: https://github.com/TsinghuaDatabaseGroup/DeepEye/tree/master/APIs_Deepeye Problem Research Analyze Process Implementation Process My role in the project This is a project made during my time @Datalab in Tsinghua University in Beijing I was assigned this task by the leading professor of the lab Guoliang Li During the development, I was under the instruction of an excellent doctoral student - Yuyu Luo Huge thanks to Professor Li and my friend Yuyu Luo Conclusion","title":"deepeye_pack"},{"location":"deepeye_pack/deepeye_pack/#deepeye_pack","text":"","title":"deepeye_pack"},{"location":"deepeye_pack/deepeye_pack/#a-lego-tank","text":"","title":"A Lego Tank!!"},{"location":"deepeye_pack/deepeye_pack/#introduction","text":"This is a Python package for DeepEye API,can easily visualize data without too much effort. And provide with really simple usage the DeepEye system: https://github.com/TsinghuaDatabaseGroup/DeepEye/tree/master/APIs_Deepeye","title":"Introduction"},{"location":"deepeye_pack/deepeye_pack/#problem-research","text":"","title":"Problem Research"},{"location":"deepeye_pack/deepeye_pack/#analyze-process","text":"","title":"Analyze Process"},{"location":"deepeye_pack/deepeye_pack/#implementation-process","text":"","title":"Implementation Process"},{"location":"deepeye_pack/deepeye_pack/#my-role-in-the-project","text":"This is a project made during my time @Datalab in Tsinghua University in Beijing I was assigned this task by the leading professor of the lab Guoliang Li During the development, I was under the instruction of an excellent doctoral student - Yuyu Luo Huge thanks to Professor Li and my friend Yuyu Luo","title":"My role in the project"},{"location":"deepeye_pack/deepeye_pack/#conclusion","text":"","title":"Conclusion"},{"location":"frozen/frozen/","text":"FROZEN Freeze your impulse to buy Introduction FROZEN is an app to prevent impulsive consumption It aims to use a simulation game to prevent user from buying stuff they dont actually need When you first enter the app, you need to change your password or your payment method If you choose to use OTP(One-Time Pin) as payment password, we would implement a mechanism to \"Freeze\" your access to the OTP. If you choose change password, we would told you a secret key which you need to add to your own password. Together they form the whole password, and we would \"Freeze\" it before you buy anything. We would ask you a few questions about what you are about to buy according to the necessity and emergence of the product. And we would also ask you to stop for a while according to your previous consumption method If you successfully gave up the idea of buying, then you will be rewarded in the game However, if you insisted to buy, you would be punished in the game Apart from that, we would record every time of your consumption intention and evaluate of your user sketch Your game performance is based on the action of your every consumption The Game The game's theme is regarding polar bears on ice bergs Your actions represent virtual carbon footprint By buying more stuff, more virtual carbon footprint is created. Hence, the ice berg would shrink, threatening your polar bears By buying less, less virtual carbon footprint is created, the ice berg will grow and attract more polar bears on to the ice berg When your ice reach certain value, an amount of donation would be sent to the foundation polarbearsinternational.org Presentation My Role in the Team First task My main responsibility is to coordinate the communication between front-end and back-end Both teams were working on their own side and forgot the other one completely When we tried to combine, there were too many issues to handle I had to design a DB for the communication to go through Second Task Another of my responsibility was to develop the prompt system for the game. The system is highly related to the user behavior If the prompt was too frequent it will cause the user to become annoyed and causing the customer stickiness of the app to drop We discuss several times to decide when is the best time for the prompt to come out and as in what kind of styles","title":"FROZEN"},{"location":"frozen/frozen/#frozen","text":"","title":"FROZEN"},{"location":"frozen/frozen/#freeze-your-impulse-to-buy","text":"","title":"Freeze your impulse to buy"},{"location":"frozen/frozen/#introduction","text":"FROZEN is an app to prevent impulsive consumption It aims to use a simulation game to prevent user from buying stuff they dont actually need When you first enter the app, you need to change your password or your payment method If you choose to use OTP(One-Time Pin) as payment password, we would implement a mechanism to \"Freeze\" your access to the OTP. If you choose change password, we would told you a secret key which you need to add to your own password. Together they form the whole password, and we would \"Freeze\" it before you buy anything. We would ask you a few questions about what you are about to buy according to the necessity and emergence of the product. And we would also ask you to stop for a while according to your previous consumption method If you successfully gave up the idea of buying, then you will be rewarded in the game However, if you insisted to buy, you would be punished in the game Apart from that, we would record every time of your consumption intention and evaluate of your user sketch Your game performance is based on the action of your every consumption","title":"Introduction"},{"location":"frozen/frozen/#the-game","text":"The game's theme is regarding polar bears on ice bergs Your actions represent virtual carbon footprint By buying more stuff, more virtual carbon footprint is created. Hence, the ice berg would shrink, threatening your polar bears By buying less, less virtual carbon footprint is created, the ice berg will grow and attract more polar bears on to the ice berg When your ice reach certain value, an amount of donation would be sent to the foundation polarbearsinternational.org","title":"The Game"},{"location":"frozen/frozen/#presentation","text":"","title":"Presentation"},{"location":"frozen/frozen/#my-role-in-the-team","text":"","title":"My Role in the Team"},{"location":"frozen/frozen/#first-task","text":"My main responsibility is to coordinate the communication between front-end and back-end Both teams were working on their own side and forgot the other one completely When we tried to combine, there were too many issues to handle I had to design a DB for the communication to go through","title":"First task"},{"location":"frozen/frozen/#second-task","text":"Another of my responsibility was to develop the prompt system for the game. The system is highly related to the user behavior If the prompt was too frequent it will cause the user to become annoyed and causing the customer stickiness of the app to drop We discuss several times to decide when is the best time for the prompt to come out and as in what kind of styles","title":"Second Task"},{"location":"gender_differences_on_stackoverflow/gender_differences_on_stackoverflow/","text":"Gender Differences on StackOverflow","title":"Gender Differences on StackOverflow"},{"location":"gender_differences_on_stackoverflow/gender_differences_on_stackoverflow/#gender-differences-on-stackoverflow","text":"","title":"Gender Differences on StackOverflow"},{"location":"modeling_user_willingness/modeling_user_willingness/","text":"Modeling user willingness of data contribution in online social networks Help to collect your data from social network faster Introduction A Python Machine Learning Model that helps to collect data from social network in a more efficient fashion This is my Bachelor Thesis Problem Research Under the implementation of GDPR(General Data Protection Regulation) since 2018, Social network companies like Facebook and Twitter would apply more protection to their data. However, in order to research on topics regarding social networks, data collection would become harder. Hence, we would like to acquire the public data on social network and analyze them through machine learning model based on the individual elements and situational elements. Eventually, we would like to find users who are more likely to provide their private data through our model. Analyze Process Questions What is the relationship between the user willingness and their public data? Generally there are ground truth for questions to be solved by ML models, however, is there such a ground truth in our question? The young people are more likely to receive our survey instead of the elder ones. Will this cause any bias problem? Implementation Process Data Preprocessing Training Refining My role in the project Conclusion This Project","title":"Modeling user willingness of data contribution in online social networks"},{"location":"modeling_user_willingness/modeling_user_willingness/#modeling-user-willingness-of-data-contribution-in-online-social-networks","text":"","title":"Modeling user willingness of data contribution in online social networks"},{"location":"modeling_user_willingness/modeling_user_willingness/#help-to-collect-your-data-from-social-network-faster","text":"","title":"Help to collect your data from social network faster"},{"location":"modeling_user_willingness/modeling_user_willingness/#introduction","text":"A Python Machine Learning Model that helps to collect data from social network in a more efficient fashion This is my Bachelor Thesis","title":"Introduction"},{"location":"modeling_user_willingness/modeling_user_willingness/#problem-research","text":"Under the implementation of GDPR(General Data Protection Regulation) since 2018, Social network companies like Facebook and Twitter would apply more protection to their data. However, in order to research on topics regarding social networks, data collection would become harder. Hence, we would like to acquire the public data on social network and analyze them through machine learning model based on the individual elements and situational elements. Eventually, we would like to find users who are more likely to provide their private data through our model.","title":"Problem Research"},{"location":"modeling_user_willingness/modeling_user_willingness/#analyze-process","text":"","title":"Analyze Process"},{"location":"modeling_user_willingness/modeling_user_willingness/#questions","text":"What is the relationship between the user willingness and their public data? Generally there are ground truth for questions to be solved by ML models, however, is there such a ground truth in our question? The young people are more likely to receive our survey instead of the elder ones. Will this cause any bias problem?","title":"Questions"},{"location":"modeling_user_willingness/modeling_user_willingness/#implementation-process","text":"","title":"Implementation Process"},{"location":"modeling_user_willingness/modeling_user_willingness/#data-preprocessing","text":"","title":"Data Preprocessing"},{"location":"modeling_user_willingness/modeling_user_willingness/#training","text":"","title":"Training"},{"location":"modeling_user_willingness/modeling_user_willingness/#refining","text":"","title":"Refining"},{"location":"modeling_user_willingness/modeling_user_willingness/#my-role-in-the-project","text":"","title":"My role in the project"},{"location":"modeling_user_willingness/modeling_user_willingness/#conclusion","text":"This Project","title":"Conclusion"},{"location":"nsfw_detection/nsfw_detection/","text":"NSFW Detection Not Safe For Work content detection API Introduction The NSFW Detection is a RESTful API which can identify adult content through a CNN-model The NSFW Detection is built with Django The NSFW Detection is containerized into Dockerfile and docker-compose, so you can deploy them in any docker-installed instance Requirements of the project Batalk is an online board game platform It grew to a larger user population and the user regulation became stricter when the chat function is developed App Store requires Batalk to developed a mechanism to filter the NSFW(Not Safe For Work) content Therefore, the task is to developed an API which can detect whether the uploaded images to the server is NSFW or SFW(Safe For Work) Possible solutions While there are several popular backend frameworks which are suitable for the project, I still recommended Django as the Backend Framework Not only because I am familiar with this framework but also because it provides a very intuitive way to establish an admin backstage for the maintainer to inspect the status Concept of Implementation The NSFW Detection uses the Tensorflow Implementation of Yahoo's Open NSFW Model to act as the detector When NSFW Detection receives an API request, it would first be distributed through Nginx Then the uwsgi would receive the data from Nginx so Django may be able to process the info The Django engine would identify the input type, e.g. url, image or base64 and issue them to relative corresponding serializers Serializers would then preprocessing each image and use the detection model to detect the image Then the result which contains file_name, user_id, test_score and etc. would be returned The NSFW Detection also has an admin backstage which can be access through browser and monitor the status of the detection status The NSFW Detection can deal high-concurrency problems using Nginx The average response time is 3~4 seconds My role in the project This is the project during my intership in Batalk LTD. I am responsible for all of the implementation of the tasks The features and functions are requirements from my manager Leo Zhang Github Links https://github.com/tpchris1/nsfw_detection","title":"NSFW Detection"},{"location":"nsfw_detection/nsfw_detection/#nsfw-detection","text":"","title":"NSFW Detection"},{"location":"nsfw_detection/nsfw_detection/#not-safe-for-work-content-detection-api","text":"","title":"Not Safe For Work content detection API"},{"location":"nsfw_detection/nsfw_detection/#introduction","text":"The NSFW Detection is a RESTful API which can identify adult content through a CNN-model The NSFW Detection is built with Django The NSFW Detection is containerized into Dockerfile and docker-compose, so you can deploy them in any docker-installed instance","title":"Introduction"},{"location":"nsfw_detection/nsfw_detection/#requirements-of-the-project","text":"Batalk is an online board game platform It grew to a larger user population and the user regulation became stricter when the chat function is developed App Store requires Batalk to developed a mechanism to filter the NSFW(Not Safe For Work) content Therefore, the task is to developed an API which can detect whether the uploaded images to the server is NSFW or SFW(Safe For Work)","title":"Requirements of the project"},{"location":"nsfw_detection/nsfw_detection/#possible-solutions","text":"While there are several popular backend frameworks which are suitable for the project, I still recommended Django as the Backend Framework Not only because I am familiar with this framework but also because it provides a very intuitive way to establish an admin backstage for the maintainer to inspect the status","title":"Possible solutions"},{"location":"nsfw_detection/nsfw_detection/#concept-of-implementation","text":"The NSFW Detection uses the Tensorflow Implementation of Yahoo's Open NSFW Model to act as the detector When NSFW Detection receives an API request, it would first be distributed through Nginx Then the uwsgi would receive the data from Nginx so Django may be able to process the info The Django engine would identify the input type, e.g. url, image or base64 and issue them to relative corresponding serializers Serializers would then preprocessing each image and use the detection model to detect the image Then the result which contains file_name, user_id, test_score and etc. would be returned The NSFW Detection also has an admin backstage which can be access through browser and monitor the status of the detection status The NSFW Detection can deal high-concurrency problems using Nginx The average response time is 3~4 seconds","title":"Concept of Implementation"},{"location":"nsfw_detection/nsfw_detection/#my-role-in-the-project","text":"This is the project during my intership in Batalk LTD. I am responsible for all of the implementation of the tasks The features and functions are requirements from my manager Leo Zhang","title":"My role in the project"},{"location":"nsfw_detection/nsfw_detection/#github-links","text":"https://github.com/tpchris1/nsfw_detection","title":"Github Links"},{"location":"the_haunted_village/the_haunted_village/","text":"The Haunted Village A Lego Tank!! Introduction Problem Research Analyze Process Implementation Process My role in the project Conclusion","title":"The Haunted Village"},{"location":"the_haunted_village/the_haunted_village/#the-haunted-village","text":"","title":"The Haunted Village"},{"location":"the_haunted_village/the_haunted_village/#a-lego-tank","text":"","title":"A Lego Tank!!"},{"location":"the_haunted_village/the_haunted_village/#introduction","text":"","title":"Introduction"},{"location":"the_haunted_village/the_haunted_village/#problem-research","text":"","title":"Problem Research"},{"location":"the_haunted_village/the_haunted_village/#analyze-process","text":"","title":"Analyze Process"},{"location":"the_haunted_village/the_haunted_village/#implementation-process","text":"","title":"Implementation Process"},{"location":"the_haunted_village/the_haunted_village/#my-role-in-the-project","text":"","title":"My role in the project"},{"location":"the_haunted_village/the_haunted_village/#conclusion","text":"","title":"Conclusion"},{"location":"the_tank/the_tank_arduino/","text":"The Tank Gen2 - Arduino Based A Lego Tank!! Introduction This is a Arduino-based mobile Lego tank which can be controlled by an Android phone through Blynk The Tank Gen2 is the upgrade version of the Gen1 - FPGA-based one Since the Gen1 is rather small and not strong enough Gen2 has made a significantly big change compared with Gen1 Be sure to check Gen1 if you want more details for the background stories Feature It has two main structural parts Upper: Turrent Turrent can lift and turn left and right Turrent can fire Lower: Base Base can also turn left and right There are a total of 4 motors to drive the Turrent and the Base It has two front lights which can be manually controlled through push buttons It has an Ultrasonic sensor that can detect enemy upfront It has a Thermal sensor which can light up alarm RGB LED to certain temperature and humdity It has a Photon Resistor which can light up the front lights when environment is dark It has a Canon which can shoot Lego parts and is controlled by a solenoid Moving, Shooting and Lighting can be controlled by an Android Phone through Blynk The Tank communicates with the phone by Bluetooth through a HC05 Bluetooth Chip Parts Used TO BE FILLED Please refer to Architecture first Architecture Demo Development Phase 1: Base Structure Development Phase 2: Phone Working Development Phase 3: Torrent Moving Development Phase 4: Shooting Development Phase 5: Moving My role in the project This is the final project of the course Intro. to Embedded System I am responsible for all of the implementation of the tasks including Lego mechanism, circuits and motors and programming over Arduino Conclusion","title":"Gen2 - Arduino-based"},{"location":"the_tank/the_tank_arduino/#the-tank-gen2-arduino-based","text":"","title":"The Tank Gen2 - Arduino Based"},{"location":"the_tank/the_tank_arduino/#a-lego-tank","text":"","title":"A Lego Tank!!"},{"location":"the_tank/the_tank_arduino/#introduction","text":"This is a Arduino-based mobile Lego tank which can be controlled by an Android phone through Blynk The Tank Gen2 is the upgrade version of the Gen1 - FPGA-based one Since the Gen1 is rather small and not strong enough Gen2 has made a significantly big change compared with Gen1 Be sure to check Gen1 if you want more details for the background stories","title":"Introduction"},{"location":"the_tank/the_tank_arduino/#feature","text":"It has two main structural parts Upper: Turrent Turrent can lift and turn left and right Turrent can fire Lower: Base Base can also turn left and right There are a total of 4 motors to drive the Turrent and the Base It has two front lights which can be manually controlled through push buttons It has an Ultrasonic sensor that can detect enemy upfront It has a Thermal sensor which can light up alarm RGB LED to certain temperature and humdity It has a Photon Resistor which can light up the front lights when environment is dark It has a Canon which can shoot Lego parts and is controlled by a solenoid Moving, Shooting and Lighting can be controlled by an Android Phone through Blynk The Tank communicates with the phone by Bluetooth through a HC05 Bluetooth Chip","title":"Feature"},{"location":"the_tank/the_tank_arduino/#parts-used","text":"TO BE FILLED Please refer to Architecture first","title":"Parts Used"},{"location":"the_tank/the_tank_arduino/#architecture","text":"","title":"Architecture"},{"location":"the_tank/the_tank_arduino/#demo","text":"Development Phase 1: Base Structure Development Phase 2: Phone Working Development Phase 3: Torrent Moving Development Phase 4: Shooting Development Phase 5: Moving","title":"Demo"},{"location":"the_tank/the_tank_arduino/#my-role-in-the-project","text":"This is the final project of the course Intro. to Embedded System I am responsible for all of the implementation of the tasks including Lego mechanism, circuits and motors and programming over Arduino","title":"My role in the project"},{"location":"the_tank/the_tank_arduino/#conclusion","text":"","title":"Conclusion"},{"location":"the_tank/the_tank_fpga/","text":"The Tank Gen1 - FPGA Based A Lego Tank!! Introduction Problem Research Analyze Process Implementation Process My role in the project Conclusion","title":"Gen1 - FPGA-based"},{"location":"the_tank/the_tank_fpga/#the-tank-gen1-fpga-based","text":"","title":"The Tank Gen1 - FPGA Based"},{"location":"the_tank/the_tank_fpga/#a-lego-tank","text":"","title":"A Lego Tank!!"},{"location":"the_tank/the_tank_fpga/#introduction","text":"","title":"Introduction"},{"location":"the_tank/the_tank_fpga/#problem-research","text":"","title":"Problem Research"},{"location":"the_tank/the_tank_fpga/#analyze-process","text":"","title":"Analyze Process"},{"location":"the_tank/the_tank_fpga/#implementation-process","text":"","title":"Implementation Process"},{"location":"the_tank/the_tank_fpga/#my-role-in-the-project","text":"","title":"My role in the project"},{"location":"the_tank/the_tank_fpga/#conclusion","text":"","title":"Conclusion"}]}